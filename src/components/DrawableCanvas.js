import React from 'react';
import ReactDOM from 'react-dom';
import PropTypes from 'prop-types';
import assign from 'object-assign';
import C2S from '../libraries/C2S';
import Canvg from 'canvg';

class DrawableCanvas extends React.Component {

  state = {}

  constructor(props) {
    super(props);
  }

  componentDidMount(){
    const node = ReactDOM.findDOMNode(this);
    const canvas = node.querySelector('.canvas');

    var v;

    canvas.style.width = 300;
    canvas.style.height = 200;
    canvas.width = 300;
    canvas.height = 200;

    const context = canvas.getContext('2d');
    const serializable = C2S(300, 200);

    this.setState({
      v,
      serializable,
      canvas,
      context,
      lineWidth: this.props.lineWidth,
      brushColor: this.props.brushColor,
    });
    this.resetCanvas = this.resetCanvas.bind(this);
    this.setColor = this.setColor.bind(this);
    this.canvasColorSetter = this.canvasColorSetter.bind(this);
    this.updateSvg = this.updateSvg.bind(this);
    this.applyPreset = this.applyPreset.bind(this);
  }

  componentWillReceiveProps(nextProps) {
    if(nextProps.clear){
      this.resetCanvas();
    }
  }
  static getDefaultStyle() {
    return {
      brushColor: '#000000',
      lineWidth: 4,
      cursor: 'pointer',
      canvasStyle: {
        backgroundColor: '#00FFDC'
      },
      clear: true,
    };
  }

  handleOnTouchStart (e) {
    onmouseleave.log('started');
    const rect = this.state.canvas.getBoundingClientRect();
    this.state.context.beginPath();
    this.setState({
      lastX: e.targetTouches[0].pageX - rect.left,
      lastY: e.targetTouches[0].pageY - rect.top,
      drawing: true
    });
  }

  handleOnMouseDown(e){
    const rect = this.state.canvas.getBoundingClientRect();
    this.state.context.beginPath();

    this.setState({
      lastX: e.clientX - rect.left,
      lastY: e.clientY - rect.top,
      drawing: true
    });
  }

  handleOnTouchMove (e) {
    if (this.state.drawing) {
      const rect = this.state.canvas.getBoundingClientRect();
      const lastX = this.state.lastX;
      const lastY = this.state.lastY;
      let currentX = e.targetTouches[0].pageX - rect.left;
      let currentY = e.targetTouches[0].pageY - rect.top;
      this.draw(lastX, lastY, currentX, currentY);
      this.setState({
        lastX: currentX,
        lastY: currentY
      });
    }
  }

  handleOnMouseMove(e){
    if(this.state.drawing){
      const rect = this.state.canvas.getBoundingClientRect();
      const lastX = this.state.lastX;
      const lastY = this.state.lastY;
      let currentX = e.clientX - rect.left;
      let currentY = e.clientY - rect.top;

      this.draw(lastX, lastY, currentX, currentY);
      this.setState({
        lastX: currentX,
        lastY: currentY
      });
    }
  }

  handleonMouseUp() {
    this.setState({
      drawing: false
    });
  }

  draw(lX, lY, cX, cY) {
    const newContext = this.state.context;
    newContext.strokeStyle = this.state.brushColor;
    newContext.lineWidth = this.state.lineWidth;
    this.setState({
      context: newContext
    });
    this.state.context.moveTo(lX, lY);
    this.state.context.lineTo(cX, cY);
    this.state.context.stroke();
    this.updateSvg(lX, lY, cX, cY);
  }

  updateSvg(lX, lY, cX, cY) {
    var serializable = this.state.serializable;
    serializable.strokeStyle = this.state.brushColor;
    serializable.lineWidth = this.state.lineWidth;
    serializable.moveTo(lX, lY);
    serializable.lineTo(cX, cY);
    serializable.stroke();
    serializable.save();
    this.setState({
      serializable,
    })
  }

  setColor(e) {
    this.setState({
      brushColor: e.target.style.backgroundColor,
    })
  }

  resetCanvas(){
    const width = this.state.context.canvas.width;
    const height = this.state.context.canvas.height;
    this.state.context.clearRect(0, 0, width, height);
    var serializable = C2S(300, 400);
    if(this.state.presetUsed){
      this.state.v.stop();
      this.setState({
        presetUsed: false,
      })
    }
    this.setState({
      serializable,
    })
  }

  canvasStyle(){
    const defaults = DrawableCanvas.getDefaultStyle();
    const custom = this.props.canvasStyle;

    return assign({}, defaults, custom);
  }

  canvasColorPicker() {
    return(
      <div>
        <p style={{margin: 0, marginLeft: 10, fontWeight: 900}}>Canvas Colors</p>
    <div class="grid-container">
      <div class="grid-item" style={{backgroundColor: '#ff948c'}}
          onClick={() => this.canvasColorSetter('#ff948c')}></div>
      <div class="grid-item" style={{backgroundColor: '#b6f0ec'}}
          onClick={() => this.canvasColorSetter('#b6f0ec')}></div>
      <div class="grid-item" style={{backgroundColor: '#bbfab4'}}
          onClick={() => this.canvasColorSetter('#bbfab4')}></div>  
      <div class="grid-item" style={{backgroundColor: '#fcf990'}}
          onClick={() => this.canvasColorSetter('#fcf990')}></div>
      <div class="grid-item" style={{backgroundColor: '#f190fc'}}
          onClick={() => this.canvasColorSetter('#f190fc')}></div>
      <div class="grid-item" style={{backgroundColor: '#ffc37a'}}
          onClick={() => this.canvasColorSetter('#ffc37a')}></div>
      <div class="grid-item" style={{backgroundColor: '#000000'}}
          onClick={() => this.canvasColorSetter('#000000')}></div>
      <div class="grid-item" style={{backgroundColor: '#c4674d'}}
          onClick={() => this.canvasColorSetter('#c4674d')}></div>
      <div class="grid-item" style={{backgroundColor: '#f7f3e1'}}
          onClick={() => this.canvasColorSetter('#f7f3e1')}></div>
    </div>
    </div>
    )
  }

  canvasColorSetter(color) {
      document.getElementById('drawable-canvas').style.backgroundColor = color;
      var serializable = this.state.serializable;
      serializable.backgroundColor = color;
      this.setState({
        serializable,
      })
  }

  brushColorPicker() {
    return(
      <div>
        <p style={{margin: 0, marginLeft: 10, fontWeight: 900}}>Brush Colors</p>
    <div class="grid-container">
    <div class="grid-item" style={{backgroundColor: '#ff948c'}}
          onClick={() => this.brushColorSetter('#ff948c')}></div>
      <div class="grid-item" style={{backgroundColor: '#b6f0ec'}}
          onClick={() => this.brushColorSetter('#b6f0ec')}></div>
      <div class="grid-item" style={{backgroundColor: '#bbfab4'}}
          onClick={() => this.brushColorSetter('#bbfab4')}></div>  
      <div class="grid-item" style={{backgroundColor: '#fcf990'}}
          onClick={() => this.brushColorSetter('#fcf990')}></div>
      <div class="grid-item" style={{backgroundColor: '#f190fc'}}
          onClick={() => this.brushColorSetter('#f190fc')}></div>
      <div class="grid-item" style={{backgroundColor: '#ffc37a'}}
          onClick={() => this.brushColorSetter('#ffc37a')}></div>
      <div class="grid-item" style={{backgroundColor: '#000000'}}
          onClick={() => this.brushColorSetter('#000000')}></div>
      <div class="grid-item" style={{backgroundColor: '#c4674d'}}
          onClick={() => this.brushColorSetter('#c4674d')}></div>
      <div class="grid-item" style={{backgroundColor: '#f7f3e1'}}
          onClick={() => this.brushColorSetter('#f7f3e1')}></div> 
    </div>
    </div>
    )
  }

  brushColorSetter(color) {
    this.setState({
      brushColor: color,
    })
  }

  lineWidthPicker() {
    return(
      <div>
        <p style={{margin: 0, marginLeft: 10, fontWeight: 900}}>Brush Colors</p>
    <div className='grid-container' style={{height: 215, display: 'block'}}>
      <div style={{height:'20px', width: '130px', borderRadius: 5, backgroundColor: 'black'}}
      onClick={() => this.lineWidthSetter(20)}></div>
      <br/>
      <div style={{height:'15px', width: '130px', borderRadius: 5, backgroundColor: 'black'}}
      onClick={() => this.lineWidthSetter(15)}></div>
      <br/>
      <div style={{height:'10px', width: '130px', borderRadius: 5, backgroundColor: 'black'}}
      onClick={() => this.lineWidthSetter(10)}></div>
      <br/>
      <div style={{height:'5px', width: '130px', borderRadius: 5, backgroundColor: 'black'}}
      onClick={() => this.lineWidthSetter(5)}></div>
      <br/>
      <div style={{height:'4px', width: '130px', borderRadius: 5, backgroundColor: 'black'}}
      onClick={() => this.lineWidthSetter(4)}></div>
      <br/>
      <div style={{height:'3px', width: '130px', borderRadius: 5, backgroundColor: 'black'}}
      onClick={() => this.lineWidthSetter(3)}></div>
      <br/>
      <div style={{height:'2px', width: '130px', borderRadius: 5, backgroundColor: 'black'}}
      onClick={() => this.lineWidthSetter(2)}></div>
    </div>
    </div>
    )
  }

  lineWidthSetter(newLineWidth) {
    this.setState({
      lineWidth: newLineWidth,
    })
  }

  presets() {
    return(
    <div>
      <p style={{margin: 10, marginBottom: 0, fontWeight: 900}}>Presets</p>
    <div className='grid-container'>

      <div id='angel-div' className='grid-item' onClick={() => this.applyPreset('angel')}>
      <svg version="1.1" id="angel" x="0px" y="0px" viewBox="0 0 512 512" style={{enableBackground: "new 0 0 512 512"}} space="preserve">
<circle style={{fill:"#FFE17D"}} cx="256" cy="272.52" r="239.48"/>
<path style={{fill:"#FFD164"}} d="M290.764,477.236C158.5,477.236,51.28,370.015,51.28,237.752c0-57.277,20.133-109.836,53.674-151.046
	c-53.953,43.912-88.438,110.823-88.438,185.81C16.516,404.779,123.737,512,256,512c74.987,0,141.899-34.486,185.811-88.439
	C400.601,457.103,348.041,477.236,290.764,477.236z"/>
<path style={{fill:"#A5CDFF"}} d="M256,0C123.737,0,16.516,36.972,16.516,82.581c0,45.608,107.221,82.581,239.484,82.581
	s239.484-36.973,239.484-82.581C495.484,36.972,388.263,0,256,0z M256,115.613c-100.338,0-181.677-22.183-181.677-49.548
	S155.662,16.516,256,16.516S437.677,38.7,437.677,66.065S356.338,115.613,256,115.613z"/>
<g>
	<path style={{fill:"#AA7346"}} d="M379.968,258.065c-3.024,0-6.016-1.319-8.056-3.855c-6.556-8.165-15.435-12.661-24.984-12.661
		c-9.548,0-18.427,4.496-24.984,12.661c-3.565,4.436-10.073,5.149-14.516,1.577c-4.444-3.569-5.153-10.069-1.581-14.512
		c10.411-12.948,25.379-20.371,41.081-20.371s30.669,7.423,41.081,20.371c3.573,4.444,2.863,10.944-1.581,14.512
		C384.524,257.319,382.234,258.065,379.968,258.065z"/>
	<path style={{fill:"#AA7346"}} d="M198.258,258.065c-3.024,0-6.016-1.319-8.056-3.855c-6.556-8.165-15.435-12.661-24.984-12.661
		s-18.427,4.496-24.984,12.661c-3.573,4.436-10.073,5.149-14.516,1.577c-4.444-3.569-5.153-10.069-1.581-14.512
		c10.411-12.948,25.379-20.371,41.081-20.371s30.669,7.423,41.081,20.371c3.573,4.444,2.863,10.944-1.581,14.512
		C202.815,257.319,200.524,258.065,198.258,258.065z"/>
	<path style={{fill:"#AA7346"}} d="M255.968,406.71c-42.5,0-82.661-20.105-107.435-53.782c-3.379-4.593-2.395-11.052,2.202-14.431
		c4.581-3.387,11.048-2.395,14.427,2.198c20.903,28.411,54.847,45.371,90.806,45.371s69.911-16.96,90.815-45.371
		c3.379-4.585,9.831-5.577,14.435-2.198c4.589,3.379,5.573,9.843,2.194,14.431C338.629,386.605,298.46,406.71,255.968,406.71z"/>
</g>
<path style={{fill:"#8CB4EB"}} d="M49.548,66.065c0,36.486,92.431,66.065,206.452,66.065s206.452-29.578,206.452-66.065
	c0-35.302-86.53-64.133-195.42-65.968C263.373,0.039,259.7,0,256,0s-7.373,0.039-11.032,0.096
	C136.079,1.931,49.548,30.762,49.548,66.065z M437.677,66.065c0,27.365-81.34,49.548-181.677,49.548S74.323,93.429,74.323,66.065
	S155.662,16.516,256,16.516S437.677,38.7,437.677,66.065z"/>
</svg>
      </div>

      <div id='happy-div' className='grid-item' onClick={() => this.applyPreset('happy')}>
      <svg version="1.1" x="0px" y="0px" id='happy'
	 viewBox="0 0 512 512" style={{enableBackground: "new 0 0 512 512"}} space="preserve">
<circle style={{fill:"#FFE17D"}} cx="256" cy="256" r="256"/>
<path style={{fill:"#FFD164"}} d="M293.161,474.839c-141.385,0-256-114.615-256-256c0-61.227,21.521-117.411,57.376-161.463
	C36.863,104.316,0,175.842,0,256c0,141.385,114.615,256,256,256c80.159,0,151.685-36.864,198.626-94.538
	C410.573,453.317,354.389,474.839,293.161,474.839z"/>
<path style={{fill:"#9C6846"}} d="M256,305.305c-49.323,0-96.405-5.727-139.598-16.079c-5.595-1.341-10.417,4.504-8.691,10.596
	c19.92,70.324,78.718,121.34,148.29,121.34s128.369-51.016,148.29-121.34c1.726-6.092-3.096-11.937-8.691-10.596
	C352.405,299.578,305.323,305.305,256,305.305z"/>
<g>
	<path style={{fill:"#7D5046"}} d="M395.599,289.226c-43.194,10.352-90.275,16.079-139.599,16.079s-96.405-5.726-139.598-16.079
		c-5.595-1.341-10.417,4.504-8.691,10.596c5.214,18.408,13.148,35.443,23.186,50.637c41.04,7.796,82.792,12.085,125.121,12.085
		c42.315,0,84.051-4.286,125.079-12.076c10.041-15.196,17.978-32.233,23.193-50.645
		C406.015,293.729,401.194,287.885,395.599,289.226z"/>
	<path style={{fill:"#7D5046"}} d="M169.29,231.642L169.29,231.642c-11.402,0-20.645-9.243-20.645-20.645v-33.449
		c0-11.402,9.243-20.645,20.645-20.645l0,0c11.402,0,20.645,9.243,20.645,20.645v33.449
		C189.935,222.399,180.692,231.642,169.29,231.642z"/>
</g>
<path style={{fill:"#9C6846"}} d="M169.29,156.903c-1.414,0-2.794,0.145-4.129,0.416v45.419c0,6.841,5.546,12.387,12.387,12.387
	s12.387-5.546,12.387-12.387v-25.191C189.935,166.146,180.693,156.903,169.29,156.903z"/>
<path style={{fill:"#7D5046"}} d="M342.71,231.642L342.71,231.642c-11.402,0-20.645-9.243-20.645-20.645v-33.449
	c0-11.402,9.243-20.645,20.645-20.645l0,0c11.402,0,20.645,9.243,20.645,20.645v33.449
	C363.355,222.399,354.112,231.642,342.71,231.642z"/>
<path style={{fill:"#9C6846"}} d="M342.71,156.903c-1.414,0-2.794,0.145-4.129,0.416v45.419c0,6.841,5.546,12.387,12.387,12.387
	s12.387-5.546,12.387-12.387v-25.191C363.355,166.146,354.112,156.903,342.71,156.903z"/>
<path style={{fill:"#FFFFFF"}} d="M367.048,317.428c4.464-7.649,8.199-15.845,11.331-24.377
	c-38.384,7.921-79.532,12.253-122.379,12.253c-42.873,0-84.044-4.336-122.448-12.267c3.148,8.573,6.944,16.784,11.438,24.465
	c5.195,8.88,13.99,14.56,23.558,15.724c28.649,3.485,57.847,5.354,87.452,5.354c29.599,0,58.79-1.868,87.433-5.352
	C353.033,332.061,361.845,326.344,367.048,317.428z"/>
</svg>
      </div>

      <div id='happy1-div' className='grid-item' onClick={() => this.applyPreset('happy1')}>
      <svg version="1.1" id="happy1" x="0px" y="0px"
	 viewBox="0 0 512 512" style={{enableBackground: "new 0 0 512 512"}} space="preserve">
<circle style={{fill:"#FFE17D"}} cx="256" cy="256" r="256"/>
<path style={{fill:"#FFD164"}} d="M293.161,474.839c-141.385,0-256-114.615-256-256c0-61.227,21.521-117.411,57.376-161.463
	C36.863,104.316,0,175.842,0,256c0,141.385,114.615,256,256,256c80.159,0,151.685-36.864,198.626-94.538
	C410.573,453.317,354.389,474.839,293.161,474.839z"/>
<g>
	<path style={{fill:"#AA7346"}} d="M379.911,183.742c-3.024,0-6.016-1.315-8.056-3.855c-6.556-8.161-15.435-12.661-24.984-12.661
		c-9.548,0-18.427,4.5-24.984,12.661c-3.573,4.444-10.073,5.153-14.516,1.581s-5.153-10.073-1.581-14.516
		c10.411-12.948,25.379-20.371,41.081-20.371s30.669,7.423,41.081,20.371c3.573,4.444,2.863,10.944-1.581,14.516
		C384.468,183,382.177,183.742,379.911,183.742z"/>
	<path style={{fill:"#AA7346"}} d="M198.202,183.742c-3.024,0-6.016-1.315-8.056-3.855c-6.556-8.161-15.435-12.661-24.984-12.661
		s-18.427,4.5-24.984,12.661c-3.573,4.444-10.073,5.153-14.516,1.581s-5.153-10.073-1.581-14.516
		c10.411-12.948,25.379-20.371,41.081-20.371s30.669,7.423,41.081,20.371c3.573,4.444,2.863,10.944-1.581,14.516
		C202.758,183,200.468,183.742,198.202,183.742z"/>
</g>
<path style={{fill:"#9C6846"}} d="M158.57,264.524c-8.202-2.042-13.562,8.183-7.51,14.083c28.353,27.643,64.914,44.35,104.94,44.35
	s76.587-16.707,104.94-44.35c6.052-5.901,0.692-16.125-7.51-14.083c-30.343,7.554-63.133,11.724-97.43,11.724
	C221.704,276.248,188.913,272.078,158.57,264.524z"/>
<path style={{fill:"#7D5046"}} d="M353.43,264.523c-30.343,7.554-63.134,11.724-97.43,11.724s-67.087-4.17-97.429-11.724
	c-8.202-2.042-13.562,8.182-7.511,14.083c5.451,5.315,11.291,10.085,17.316,14.55c28.185,3.173,57.422,5.026,87.624,5.026
	s59.439-1.852,87.623-5.026c6.025-4.466,11.864-9.236,17.316-14.551C366.992,272.706,361.632,262.481,353.43,264.523z"/>
<path style={{fill:"#FFD164"}} d="M32.948,450.888l66.128,47.234c29.635,21.168,70.23,17.808,95.982-7.944l0,0
	c22.263-22.263,28.127-56.118,14.649-84.572l-25.72-54.297c-2.488-5.252-8.506-7.82-14.019-5.983l0,0
	c-4.693,1.564-7.858,5.956-7.858,10.902v26.753l-55.29-75.396c-4.702-6.412-14.013-7.124-19.635-1.502l0,0
	c-4.051,4.051-4.965,10.28-2.249,15.324l36.299,67.413l-55.076-55.076c-5.057-5.057-13.256-5.057-18.313,0l0,0
	c-4.736,4.736-5.079,12.301-0.791,17.446l50.823,60.988l-61.247-40.831c-5.132-3.421-11.964-2.744-16.325,1.617l0,0
	c-5.38,5.38-4.979,14.217,0.866,19.088l59.188,49.323l-36.391-12.13c-7.952-2.651-16.163,3.268-16.163,11.65l0,0
	C27.806,444.861,29.721,448.583,32.948,450.888z"/>
<g>
	<path style={{fill:"#FFC350"}} d="M123.85,489.864l-90.215-59.34c-3.425,2.135-5.829,5.869-5.829,10.371
		c0,3.966,1.915,7.688,5.142,9.992l66.128,47.234c23.701,16.929,54.392,18.126,78.914,4.773
		C159.474,505.614,140.032,501.422,123.85,489.864z"/>
	<path style={{fill:"#FFC350"}} d="M20.027,373.309c-5.046,5.405-4.583,13.97,1.145,18.743l59.398,49.805
		c2.586,2.169,6.203,2.623,9.245,1.161l0,0c5.763-2.769,6.594-10.636,1.537-14.548L20.027,373.309z"/>
	<path style={{fill:"#FFC350"}} d="M49.588,332.323c-0.606,0.426-1.2,0.881-1.741,1.422c-4.736,4.735-5.079,12.301-0.791,17.446
		l53.265,63.865c2.41,2.89,6.499,3.73,9.853,2.023l0,0c4.683-2.382,5.876-8.533,2.423-12.493L49.588,332.323z"/>
	<path style={{fill:"#FFC350"}} d="M87.185,306.085c-4.051,4.051-4.965,10.28-2.249,15.324l38.519,71.505
		c1.851,3.437,5.842,5.126,9.598,4.064l0,0c5.318-1.504,7.722-7.675,4.824-12.381l-49.129-79.763
		C88.214,305.225,87.67,305.6,87.185,306.085z"/>
	<path style={{fill:"#FFC350"}} d="M173.757,344.8c-1.258-0.017-2.535,0.109-3.788,0.527c-4.693,1.564-7.858,5.956-7.858,10.902v26.753
		l6.615,8.448c3.849,4.916,11.724,1.576,10.865-4.608L173.757,344.8z"/>
</g>
<path style={{fill:"#FFD164"}} d="M479.052,450.888l-66.128,47.234c-29.635,21.168-70.23,17.808-95.982-7.944l0,0
	c-22.263-22.263-28.127-56.118-14.649-84.572l25.72-54.297c2.488-5.252,8.506-7.82,14.019-5.983l0,0
	c4.693,1.564,7.858,5.956,7.858,10.902v26.753l55.29-75.396c4.702-6.412,14.013-7.124,19.635-1.502l0,0
	c4.051,4.051,4.965,10.28,2.249,15.324l-36.299,67.413l55.076-55.076c5.057-5.057,13.256-5.057,18.313,0l0,0
	c4.736,4.736,5.079,12.301,0.791,17.446l-50.823,60.988l61.247-40.831c5.132-3.421,11.964-2.744,16.325,1.617l0,0
	c5.38,5.38,4.979,14.217-0.866,19.088l-59.188,49.323l36.391-12.13c7.952-2.651,16.163,3.268,16.163,11.65l0,0
	C484.194,444.861,482.279,448.583,479.052,450.888z"/>
<g>
	<path style={{fill:"#FFC350"}} d="M388.15,489.864l90.215-59.34c3.425,2.135,5.829,5.869,5.829,10.371
		c0,3.966-1.915,7.688-5.142,9.992l-66.128,47.234c-23.701,16.929-54.392,18.126-78.914,4.773
		C352.526,505.614,371.968,501.422,388.15,489.864z"/>
	<path style={{fill:"#FFC350"}} d="M491.973,373.309c5.046,5.405,4.583,13.97-1.145,18.743l-59.398,49.805
		c-2.586,2.169-6.203,2.623-9.245,1.161l0,0c-5.763-2.769-6.594-10.636-1.537-14.548L491.973,373.309z"/>
	<path style={{fill:"#FFC350"}} d="M462.412,332.323c0.606,0.426,1.2,0.881,1.741,1.422c4.736,4.735,5.079,12.301,0.791,17.446
		l-53.265,63.865c-2.41,2.89-6.499,3.73-9.853,2.023l0,0c-4.683-2.382-5.876-8.533-2.423-12.493L462.412,332.323z"/>
	<path style={{fill:"#FFC350"}} d="M424.815,306.085c4.051,4.051,4.965,10.28,2.249,15.324l-38.519,71.505
		c-1.851,3.437-5.842,5.126-9.598,4.064l0,0c-5.318-1.504-7.722-7.675-4.824-12.381l49.129-79.763
		C423.786,305.225,424.33,305.6,424.815,306.085z"/>
	<path style={{fill:"#FFC350"}} d="M338.243,344.8c1.258-0.017,2.535,0.109,3.788,0.527c4.693,1.564,7.858,5.956,7.858,10.902v26.753
		l-6.615,8.448c-3.849,4.916-11.724,1.576-10.865-4.608L338.243,344.8z"/>
</g>
</svg>
      </div>

      <div id='in-love-div' className='grid-item' onClick={() => this.applyPreset('in-love')}>
      <svg version="1.1" id="in-love" x="0px" y="0px"
	 viewBox="0 0 512 512" style={{ enableBackground: "new 0 0 512 512"}} space="preserve">
<circle style={{fill:"#FFE17D"}} cx="256" cy="256" r="256"/>
<path style={{fill:"#FFD164"}} d="M293.161,474.839c-141.385,0-256-114.615-256-256c0-61.227,21.521-117.411,57.376-161.463
	C36.863,104.316,0,175.842,0,256c0,141.385,114.615,256,256,256c80.159,0,151.685-36.864,198.626-94.538
	C410.573,453.317,354.389,474.839,293.161,474.839z"/>
<path style={{fill:"#9C6846"}} d="M255.941,319.79c-46.603,0-91.087-5.012-131.899-14.073c-5.286-1.174-9.842,3.942-8.212,9.273
	c18.821,61.549,74.376,106.199,140.11,106.199s121.289-44.65,140.11-106.199c1.63-5.332-2.925-10.447-8.212-9.273
	C347.028,314.778,302.544,319.79,255.941,319.79z"/>
<path style={{fill:"#7D5046"}} d="M256.019,355.097c43.239,0,85.891-4.091,127.861-11.415c4.934-9.049,9.09-18.613,12.171-28.69
	c1.631-5.332-2.925-10.447-8.212-9.274c-40.811,9.06-85.295,14.073-131.898,14.073s-91.088-5.012-131.899-14.073
	c-5.286-1.173-9.842,3.942-8.212,9.274c3.078,10.066,7.229,19.621,12.156,28.662C170.011,350.997,212.721,355.097,256.019,355.097z"
	/>
<path style={{fill:"#E6646E"}} d="M180.694,247.512c14.037-17.648,47.271-65.028,28.317-97.235
	c-7.327-12.45-21.745-19.554-36.098-17.914c-11.657,1.332-21.01,7.456-26.878,15.882c-2.406,3.454-6.764,4.881-10.746,3.52
	c-9.716-3.32-20.88-2.724-31.066,3.099c-12.542,7.17-19.962,21.427-18.503,35.799c3.774,37.179,58.6,55.715,80.358,61.638
	C171.461,253.765,177.221,251.879,180.694,247.512z"/>
<path id="SVGCleanerId_0" style={{fill:"#E6646E"}} d="M331.306,247.512c-14.037-17.648-47.271-65.028-28.317-97.235
	c7.327-12.45,21.745-19.554,36.098-17.914c11.657,1.332,21.01,7.456,26.878,15.882c2.406,3.454,6.764,4.881,10.746,3.52
	c9.716-3.32,20.88-2.724,31.066,3.099c12.542,7.17,19.962,21.427,18.503,35.799c-3.774,37.179-58.6,55.715-80.358,61.638
	C340.539,253.765,334.779,251.879,331.306,247.512z"/>
<path style={{fill:"#DC4655"}} d="M187.895,230.736c-21.758-5.923-76.584-24.459-80.358-61.638c-0.589-5.801,0.329-11.558,2.386-16.863
	c-1.921,0.725-3.83,1.559-5.7,2.629c-12.542,7.169-19.962,21.427-18.503,35.799c3.774,37.179,58.6,55.715,80.358,61.638
	c5.383,1.465,11.143-0.421,14.616-4.788c3.228-4.058,7.48-9.74,11.871-16.398C191.016,231.228,189.446,231.158,187.895,230.736z"/>
<g>
	<path id="SVGCleanerId_0_1_" style={{fill:"#E6646E"}} d="M331.306,247.512c-14.037-17.648-47.271-65.028-28.317-97.235
		c7.327-12.45,21.745-19.554,36.098-17.914c11.657,1.332,21.01,7.456,26.878,15.882c2.406,3.454,6.764,4.881,10.746,3.52
		c9.716-3.32,20.88-2.724,31.066,3.099c12.542,7.17,19.962,21.427,18.503,35.799c-3.774,37.179-58.6,55.715-80.358,61.638
		C340.539,253.765,334.779,251.879,331.306,247.512z"/>
</g>
<path style={{fill:"#DC4655"}} d="M359.037,242.464c-14.037-17.648-47.271-65.029-28.317-97.235c2.93-4.979,7.025-9.052,11.766-12.104
	c-1.145-0.234-2.205-0.626-3.4-0.762c-14.353-1.64-28.771,5.464-36.098,17.914c-18.954,32.207,14.28,79.588,28.317,97.235
	c3.473,4.366,9.233,6.253,14.616,4.788c4.814-1.31,11.288-3.279,18.428-5.889C362.334,245.515,360.465,244.26,359.037,242.464z"/>
</svg>
      </div>

      <div id='kiss-div' className='grid-item' onClick={() => this.applyPreset('kiss')}>
      <svg version="1.1" id="kiss" x="0px" y="0px"
	 viewBox="0 0 512 512" style={{ enableBackground: "new 0 0 512 512"}} space="preserve">
<circle style={{fill:"#FFE17D"}} cx="256" cy="256" r="256"/>
<path style={{fill:"#FFD164"}} d="M293.161,474.839c-141.385,0-256-114.615-256-256c0-61.227,21.521-117.411,57.376-161.463
	C36.863,104.316,0,175.842,0,256c0,141.385,114.615,256,256,256c80.159,0,151.685-36.864,198.626-94.538
	C410.573,453.317,354.389,474.839,293.161,474.839z"/>
<g>
	<path style={{fill:"#AA7346"}} d="M371.621,266.262c-3.024,0-6.016-1.319-8.056-3.855c-6.556-8.165-15.435-12.661-24.984-12.661
		c-9.548,0-18.427,4.496-24.984,12.661c-3.565,4.435-10.073,5.157-14.516,1.577c-4.444-3.569-5.153-10.069-1.581-14.512
		c10.411-12.948,25.379-20.371,41.081-20.371s30.669,7.423,41.081,20.371c3.573,4.444,2.863,10.944-1.581,14.512
		C376.177,265.516,373.887,266.262,371.621,266.262z"/>
	<path style={{fill:"#AA7346"}} d="M388.121,224.976c-1.548,0-3.129-0.351-4.605-1.093c-0.298-0.145-31.726-15.427-77.968-15.427
		c-5.702,0-10.323-4.621-10.323-10.323s4.621-10.323,10.323-10.323c51.395,0,85.758,16.887,87.194,17.605
		c5.105,2.552,7.169,8.75,4.621,13.851C395.556,222.883,391.911,224.976,388.121,224.976z"/>
	<path style={{fill:"#AA7346"}} d="M115.613,208.456c-2.702,0-5.403-1.056-7.435-3.157c-3.952-4.105-3.831-10.641,0.274-14.597
		c1.315-1.266,32.726-31.181,78.766-43.758c5.5-1.472,11.169,1.734,12.677,7.238c1.5,5.5-1.742,11.177-7.242,12.681
		c-41,11.198-69.589,38.427-69.879,38.702C120.774,207.496,118.194,208.456,115.613,208.456z"/>
	<path style={{fill:"#AA7346"}} d="M256,439.742c-3.637,0.004-7.161-1.923-9.04-5.327c-2.758-4.992-0.952-11.27,4.04-14.028
		c5.363-2.968,11.863-5.21,18.153-7.375c5.073-1.75,14.024-4.835,17.161-7.315c-3.129-2.48-12.089-5.565-17.161-7.315
		c-14.137-4.871-31.734-10.931-31.734-26.831c0-15.887,17.597-21.94,31.734-26.806c5.065-1.742,13.992-4.81,17.137-7.282
		c-3.153-2.472-12.073-5.544-17.137-7.282c-6.266-2.157-12.742-4.383-18.097-7.331c-4.992-2.75-6.815-9.028-4.065-14.02
		c2.75-4.996,9.024-6.806,14.016-4.069c3.798,2.093,9.419,4.024,14.863,5.895c14.145,4.863,31.742,10.915,31.742,26.802
		c0,15.891-17.597,21.944-31.742,26.81c-5.065,1.742-14,4.815-17.145,7.29c3.137,2.476,12.081,5.56,17.153,7.306
		c14.137,4.871,31.734,10.931,31.734,26.831c0,15.899-17.597,21.96-31.734,26.835c-5.452,1.879-11.097,3.819-14.895,5.919
		C259.403,439.327,257.694,439.742,256,439.742z M287.202,338.379h0.081H287.202z"/>
</g>
<path style={{fill:"#E6646E"}} d="M391.268,451.883c-17.802-22.382-59.952-82.472-35.913-123.319c9.293-15.79,27.578-24.8,45.781-22.72
	c14.784,1.689,26.646,9.457,34.089,20.142c3.051,4.38,8.578,6.19,13.629,4.464c12.322-4.211,26.481-3.455,39.399,3.93
	c15.906,9.093,25.317,27.175,23.467,45.403c-4.787,47.153-74.32,70.661-101.914,78.172
	C402.978,459.814,395.672,457.421,391.268,451.883z"/>
<path style={{fill:"#7D5046"}} d="M169.29,280.774L169.29,280.774c-11.402,0-20.645-9.243-20.645-20.645v-16.516
	c0-11.402,9.243-20.645,20.645-20.645l0,0c11.402,0,20.645,9.243,20.645,20.645v16.516
	C189.935,271.531,180.692,280.774,169.29,280.774z"/>
<path style={{fill:"#9C6846"}} d="M169.29,222.968c-1.414,0-2.794,0.145-4.129,0.416v28.487c0,6.841,5.546,12.387,12.387,12.387
	s12.387-5.546,12.387-12.387v-8.258C189.935,232.211,180.693,222.968,169.29,222.968z"/>
<path style={{fill:"#DC4655"}} d="M388.438,336.823c7.447-12.653,20.685-20.836,35.011-22.564c-6.291-4.403-13.795-7.442-22.314-8.414
	c-18.203-2.08-36.488,6.929-45.78,22.72c-24.039,40.846,18.111,100.937,35.913,123.319c4.404,5.537,11.71,7.93,18.536,6.072
	c3.013-0.82,6.595-1.868,10.468-3.079C400.96,429.415,366.079,374.815,388.438,336.823z"/>
</svg>
      </div>

      <div id='love-div' className='grid-item' onClick={() => this.applyPreset('love')}>
      <svg id="love" style={{enableBackground: "new 0 0 512 512"}} viewBox="0 0 512 512">
<g>
<path d="m57.669 259.312h396.662v60.701h-396.662z" fill="#f69583"/>
<g>
<g>
<path d="m217.934 478.46h-105.734c-5.69 0-10.302-4.612-10.302-10.302v-128.52h126.338v128.52c0 5.69-4.612 10.302-10.302 10.302z" fill="#ffcec0"/>
</g>
<g>
<path d="m399.8 478.46h-105.734c-5.69 0-10.302-4.612-10.302-10.302v-128.52h126.338v128.52c0 5.69-4.612 10.302-10.302 10.302z" fill="#ffcec0"/>
</g>
</g>
<g>
<g>
<g>
<path d="m78.03 273.015-29.321-80.56c-4.743-13.031-19.151-19.749-32.181-15.007-13.031 4.744-19.75 19.152-15.007 32.183l29.321 80.56z" fill="#fdb0a0"/>
<path d="m48.71 192.459 29.32 80.557-31.354 11.412-29.32-80.557c-2.552-7.011-7.905-12.199-14.329-14.749 2.812-5.227 7.487-9.481 13.501-11.67 13.034-4.744 27.438 1.973 32.182 15.007z" fill="#f69583"/>
</g>
<g>
<path d="m481.157 290.19 29.321-80.56c4.743-13.031-1.976-27.439-15.006-32.181-13.031-4.743-27.439 1.976-32.181 15.006l-29.321 80.56z" fill="#fdb0a0"/>
<path d="m510.479 209.634-29.32 80.557-23.595-8.588 29.32-80.557c3.18-8.738 1.208-18.091-4.362-24.723 4.205-.75 8.652-.435 12.949 1.129 13.026 4.741 19.752 19.148 15.008 32.182z" fill="#f69583"/>
</g>
</g>
<g>
<g>
<g>
<path d="m446.84 263.782c52.578-52.71 52.541-138.059-.119-190.719-50.466-50.466-130.956-52.602-183.968-6.415-3.855 3.359-9.653 3.359-13.508 0-53.011-46.188-133.502-44.052-183.968 6.415-52.659 52.659-52.696 138.009-.119 190.719l184.289 184.294c3.618 3.618 9.485 3.618 13.103 0z" fill="#fb4a59"/>
</g>
</g>
<g>
<g>
<path d="m446.843 263.779-184.288 184.298c-3.618 3.618-9.493 3.618-13.11 0l-23.036-23.046 176.033-176.032c52.576-52.71 52.534-138.062-.124-190.72-9.451-9.452-19.964-17.213-31.148-23.273 27.654 4.092 54.276 16.78 75.55 38.053 52.658 52.669 52.699 138.01.123 190.72z" fill="#f82f40"/>
</g>
</g>
</g>
<g>
<g>
<g>
<path d="m83.844 308.197c-3.383-.49-6.085-3.066-6.736-6.422l-12.893-66.453c-3.018-15.602-19.222-24.889-34.24-19.541-12.207 4.348-19.148 17.265-16.672 29.984l14.302 73.474 6.563 33.713c9.796 50.325 58.534 83.18 108.859 73.384l20.47-3.985c4.356-.848 7.2-5.066 6.352-9.422l-5.447-27.981c-7.807-40.107-40.121-70.893-80.558-76.751z" fill="#ffdfd0"/>
</g>
<g>
<path d="m163.493 422.349-17.543 3.415-5.794-29.79c-7.81-40.105-40.125-70.894-80.563-76.746-3.382-.492-6.083-3.069-6.734-6.424l-12.898-66.456c-2.222-11.529-11.666-19.612-22.499-20.884 2.975-4.345 7.252-7.81 12.507-9.679 15.022-5.353 31.229 3.934 34.243 19.534l12.898 66.456c.651 3.355 3.352 5.932 6.734 6.424 40.438 5.852 72.753 36.641 80.553 76.746l5.45 27.976c.85 4.358-1.995 8.58-6.354 9.428z" fill="#ffcec0"/>
</g>
</g>
</g>
<g>
<g>
<g>
<path d="m428.156 308.197c3.383-.49 6.085-3.066 6.736-6.422l12.893-66.453c3.018-15.602 19.222-24.889 34.24-19.541 12.207 4.348 19.148 17.265 16.672 29.984l-14.302 73.474-6.563 33.713c-9.796 50.325-58.534 83.18-108.859 73.384l-20.47-3.985c-4.356-.848-7.2-5.066-6.352-9.422l5.447-27.981c7.807-40.107 40.12-70.893 80.558-76.751z" fill="#ffdfd0"/>
</g>
<g>
<path d="m498.696 245.761-14.298 73.477-6.567 33.715c-9.796 50.322-58.533 83.176-108.856 73.379l-9.708-1.889c44.421 1.047 84.438-30.006 93.217-75.092l6.557-33.715 14.308-73.467c1.948-9.992-1.928-20.111-9.591-26.081 5.608-2.221 12.047-2.525 18.271-.303 12.204 4.345 19.143 17.263 16.667 29.976z" fill="#ffcec0"/>
</g>
</g>
</g>
</g>
</g>
</svg>
      </div>

      <div id='sick-div' className='grid-item' onClick={() => this.applyPreset('sick')}>
      <svg version="1.1" id="sick" x="0px" y="0px"
	 viewBox="0 0 512.001 512.001" style={{enableBackground: "new 0 0 512.001 512.001"}} space="preserve">
<circle style={{fill:"#FFE17D"}} cx="255.997" cy="255.999" r="247.997"/>
<path style={{fill:"#FFD164"}} d="M292.001,467.999c-136.965,0-247.997-111.032-247.997-247.997c0-59.312,20.849-113.74,55.581-156.415
	C43.715,109.06,8.004,178.35,8.004,256.003c0,136.964,111.031,247.997,247.997,247.997c77.653,0,146.943-35.712,192.415-91.583
	C405.741,447.15,351.313,467.999,292.001,467.999z"/>
<g>
	<path style={{fill:"#AA7346"}} d="M136.003,234.003c-5.523,0-10-4.477-10-10c0-5.516,4.469-9.992,9.984-10l0,0
		c0.43,0,43.499-0.453,54.874-26.062c2.234-5.039,8.133-7.336,13.203-5.078c5.047,2.242,7.32,8.156,5.078,13.203
		C192.47,233.573,138.3,234.003,136.003,234.003z"/>
	<path style={{fill:"#AA7346"}} d="M375.998,234.003c-2.297,0-56.468-0.43-73.14-37.936c-2.242-5.047,0.031-10.961,5.078-13.203
		c5.055-2.258,10.953,0.039,13.203,5.078c11.375,25.609,54.444,26.062,54.874,26.062c5.516,0.023,9.984,4.5,9.977,10.016
		C385.983,229.534,381.514,234.003,375.998,234.003z"/>
</g>
<g>
	<path style={{fill:"#FFF1C4"}} d="M160.002,352H32.004c-4.422,0-8,3.578-8,8s3.578,8,8,8h127.998V352z"/>
	<path style={{fill:"#FFF1C4"}} d="M160.002,291.107l-149.803-42.8c-4.211-1.172-8.672,1.242-9.891,5.5
		c-1.211,4.242,1.25,8.672,5.5,9.891l154.193,44.055L160.002,291.107L160.002,291.107z"/>
	<path style={{fill:"#FFF1C4"}} d="M351.999,352h127.998c4.422,0,8,3.578,8,8s-3.578,8-8,8H351.999V352z"/>
	<path style={{fill:"#FFF1C4"}} d="M351.999,291.107l149.803-42.8c4.211-1.172,8.672,1.242,9.891,5.5c1.211,4.242-1.25,8.672-5.5,9.891
		L352,307.753L351.999,291.107L351.999,291.107z"/>
</g>
<path style={{fill:"#FFFFFF"}} d="M144.003,288.002v93.758c0,11.038,7.535,20.64,18.233,23.357c61.53,15.629,126.001,15.629,187.531,0
	C360.465,402.4,368,392.797,368,381.76v-93.758c0-8.837-7.163-16-16-16H160.002C151.165,272.002,144.003,279.165,144.003,288.002z"
	/>
</svg>
      </div>

      <div id='surprised-div' className='grid-item' onClick={() => this.applyPreset('surprised')}>
      <svg version="1.1" id="surprised" x="0px" y="0px"
	 viewBox="0 0 512 512" style={{enableBackground: "new 0 0 512 512"}} space="preserve">
<circle style={{fill:"#FFE17D"}} cx="256" cy="256" r="256"/>
<g>
	<circle style={{fill:"#FFFFFF"}} cx="172.47" cy="206.45" r="33.03"/>
	<circle style={{fill:"#FFFFFF"}} cx="329.38" cy="181.68" r="74.32"/>
</g>
<path style={{fill:"#9C6846"}} d="M255.054,305.305c-49.323,0-96.405-5.727-139.598-16.079c-5.595-1.341-10.417,4.504-8.691,10.596
	c19.92,70.324,78.718,121.34,148.29,121.34s128.369-51.016,148.29-121.34c1.726-6.092-3.096-11.937-8.691-10.596
	C351.459,299.578,304.378,305.305,255.054,305.305z"/>
<path style={{fill:"#7D5046"}} d="M394.653,289.226c-43.194,10.352-90.275,16.079-139.599,16.079s-96.405-5.726-139.598-16.079
	c-5.595-1.341-10.417,4.504-8.691,10.596c5.214,18.408,13.148,35.443,23.186,50.637c41.04,7.796,82.792,12.085,125.121,12.085
	c42.315,0,84.051-4.286,125.079-12.076c10.041-15.196,17.978-32.233,23.193-50.645C405.07,293.729,400.248,287.885,394.653,289.226z
	"/>
<path style={{fill:"#E6646E"}} d="M380.158,324.068l-18.135-18.135l-135.428,28.074l71.812,71.812c22.575,22.575,59.176,22.575,81.75,0
	v-0.001C402.733,383.244,402.733,346.643,380.158,324.068z"/>
<path style={{fill:"#DC4655"}} d="M388.938,335.459c-2.41-4.053-5.292-7.903-8.78-11.391l-18.135-18.135l-135.428,28.074l28.534,28.534
	c19.269-0.002,38.413-0.926,57.429-2.636c2.422-0.218,4.809,0.638,6.528,2.358l17.273,17.276c2.419,2.419,5.589,3.629,8.758,3.629
	c3.487,0,6.973-1.464,9.461-4.392c4.276-5.032,3.333-12.716-1.336-17.386l-5.561-5.561c5.471-0.779,10.932-1.615,16.381-2.514
	c10.531-1.737,19.785-8.276,24.791-17.703L388.938,335.459z"/>
<path style={{fill:"#FFFFFF"}} d="M366.103,317.428c4.464-7.649,8.199-15.845,11.331-24.377
	c-38.384,7.921-79.532,12.253-122.379,12.253c-42.873,0-84.044-4.336-122.448-12.267c3.148,8.573,6.944,16.784,11.438,24.465
	c5.195,8.88,13.99,14.56,23.558,15.724c28.649,3.485,57.847,5.354,87.452,5.354c29.599,0,58.79-1.868,87.433-5.352
	C352.087,332.061,360.899,326.344,366.103,317.428z"/>
<path style={{fill:"#FFD164"}} d="M293.161,474.839c-141.385,0-256-114.615-256-256c0-61.227,21.521-117.411,57.376-161.463
	C36.863,104.316,0,175.842,0,256c0,141.385,114.615,256,256,256c80.159,0,151.685-36.864,198.626-94.538
	C410.573,453.317,354.389,474.839,293.161,474.839z"/>
<g>
	<path style={{fill:"#5A4650"}} d="M172.474,220.903c-5.702,0-10.323-4.621-10.323-10.323v-8.258c0-5.702,4.621-10.323,10.323-10.323
		s10.323,4.621,10.323,10.323v8.258C182.796,216.282,178.175,220.903,172.474,220.903z"/>
	<path style={{fill:"#5A4650"}} d="M329.377,206.452c-9.121,0-16.516-7.395-16.516-16.516V173.42c0-9.121,7.395-16.516,16.516-16.516
		s16.516,7.395,16.516,16.516v16.516C345.893,199.056,338.498,206.452,329.377,206.452z"/>
</g>
</svg>
      </div>

      <div id='tounge-div' className='grid-item' onClick={() => this.applyPreset('tounge')}>
      <svg version="1.1" id="tounge" x="0px" y="0px" viewBox="0 0 512 512" style={{enableBackground:"new 0 0 512 512"}} space="preserve">
<circle style={{fill:"#FFE17D"}} cx="256" cy="256" r="256"/>
<path style={{fill:"#E6646E"}} d="M381.045,324.068l-12.156-12.155l-3.959,2.292c-21.911,31.88-57.444,53.583-98.206,56.866
	l-1.379,0.798l33.949,33.949c22.575,22.575,59.175,22.575,81.751,0v-0.001C403.619,383.244,403.619,346.643,381.045,324.068z"/>
<path style={{fill:"#FFD164"}} d="M293.161,474.839c-141.385,0-256-114.615-256-256c0-61.227,21.521-117.411,57.376-161.463
	C36.863,104.316,0,175.842,0,256c0,141.385,114.615,256,256,256c80.159,0,151.685-36.864,198.626-94.538
	C410.573,453.317,354.389,474.839,293.161,474.839z"/>
<path style={{fill:"#DC4655"}} d="M354.766,362.024L336.5,343.758l-17.516,17.516l18.266,18.266c2.419,2.419,5.589,3.629,8.758,3.629
	s6.339-1.21,8.758-3.629C359.605,374.706,359.605,366.859,354.766,362.024z"/>
<g>
	<path style={{fill:"#AA7346"}} d="M379.911,216.774c-3.024,0-6.016-1.319-8.056-3.855c-6.556-8.165-15.435-12.661-24.984-12.661
		c-9.548,0-18.427,4.496-24.984,12.661c-3.573,4.44-10.073,5.157-14.516,1.577c-4.444-3.569-5.153-10.069-1.581-14.512
		c10.411-12.948,25.379-20.371,41.081-20.371s30.669,7.423,41.081,20.371c3.573,4.444,2.863,10.944-1.581,14.512
		C384.468,216.028,382.177,216.774,379.911,216.774z"/>
	<path style={{fill:"#AA7346"}} d="M198.202,216.774c-3.024,0-6.016-1.319-8.056-3.855c-6.556-8.165-15.435-12.661-24.984-12.661
		s-18.427,4.496-24.984,12.661c-3.565,4.44-10.081,5.157-14.516,1.577c-4.444-3.569-5.153-10.069-1.581-14.512
		c10.411-12.948,25.379-20.371,41.081-20.371s30.669,7.423,41.081,20.371c3.573,4.444,2.863,10.944-1.581,14.512
		C202.758,216.028,200.468,216.774,198.202,216.774z"/>
	<path style={{fill:"#AA7346"}} d="M256,381.935c-54.968,0-104.379-30.673-128.952-80.044c-2.54-5.105-0.46-11.302,4.645-13.843
		c5.097-2.524,11.298-0.464,13.839,4.641C166.589,335.004,208.919,361.29,256,361.29s89.411-26.286,110.468-68.601
		c2.54-5.113,8.742-7.181,13.839-4.641c5.105,2.54,7.185,8.738,4.645,13.843C360.379,351.262,310.968,381.935,256,381.935z"/>
</g>
</svg>
      </div>
      
    </div>
    </div>
    )
  }

  applyPreset(targetId) {
    var svgElement = document.getElementById(targetId);
    this.state.v = Canvg.fromString(this.state.context, svgElement.outerHTML);
    this.state.v.start();
    this.setState({
      presetUsed: targetId,
    })
  }

  render() {
    return (
      <div>
      <div style={{display: 'flex'}}>
        <div className='drawable-canvas' id='drawable-canvas' style={{margin: '5px', border: 'black solid'}}>
      <canvas className='canvas' style = {this.canvasStyle()}
        onMouseDown = {this.handleOnMouseDown.bind(this)}
        onTouchStart = {this.handleOnTouchStart.bind(this)}
        onMouseMove = {this.handleOnMouseMove.bind(this)}
        onTouchMove = {this.handleOnTouchMove.bind(this)}
        onMouseUp = {this.handleonMouseUp.bind(this)}
        onTouchEnd = {this.handleonMouseUp.bind(this)}
      >
      </canvas>
      </div>
      <div>
      {this.presets()}
      </div>
      </div>
      <div style={{ width: 450, display: 'grid', gridTemplateColumns: 'auto auto auto'}}>
        <div style={{gridColumnStart: 1, gridColumnEnd: 3}}>
          <div style={{display: 'grid'}}>
          {this.canvasColorPicker()}
      {this.brushColorPicker()}
      <div style={{ marginLeft: 10, display: 'flex', gridColumnStart: 1, gridColumnEnd: 3}}>
      <div className='popup-btn' onClick={() => {
        if(this.state.presetUsed){
          var newRemark = document.getElementById(this.state.presetUsed);
          newRemark.style.backgroundColor = document.getElementById('drawable-canvas').style.backgroundColor;
          newRemark.style.width = 300;
          newRemark.style.height = 200;
          console.log(typeof newRemark.outerHTML);
          this.props.saveFunction(newRemark.outerHTML, "rgb(255, 255, 255)");
        }
        else{
          var color = document.getElementById('drawable-canvas').style.backgroundColor;
          this.props.saveFunction(this.state.serializable.getSerializedSvg(true), color);
        }
        this.props.toggle();
        }}><h6>Done</h6></div>
      <div className='popup-btn' onClick={this.resetCanvas}><h6>Clear</h6></div>
      <div className='popup-btn' onClick={() => {this.props.toggle();}}><h6>Cancel</h6></div>
      </div>
          </div>
        </div>
      {this.lineWidthPicker()}
      </div>
      </div>
    );
  }

}

DrawableCanvas.propTypes = {
  brushColor: PropTypes.string,
  lineWidth: PropTypes.number,
  cursor: PropTypes.string,
  canvasStyle: PropTypes.shape({
    backgroundColor: PropTypes.string
  }),
  clear: PropTypes.bool,
  remarks: PropTypes.array,
  saveFunction: PropTypes.func,
  toggle: PropTypes.func,
};

export default DrawableCanvas;



// colorPalette = () => {
//   return(
//     <div className='color-palette' style={{backgroundColor: 'lightyellow'}}>
//       <ul>
//         <li style={{float: 'left',}}>
//           <ul typeof='None'>
//             <li><div style={{backgroundColor: 'red'}} onClick={this.setColor}></div></li>
//             <li><div style={{backgroundColor: 'yellow'}} onClick={this.setColor}></div></li>
//             <li><div style={{backgroundColor: 'black'}} onClick={this.setColor}></div></li>
//           </ul>
//         </li>
//         <br/>
//         <li style={{float: 'left',}}>
//           <ul typeof='None'>
//             <li><div style={{backgroundColor: 'blue'}} onClick={this.setColor}></div></li>
//             <li><div style={{backgroundColor: 'purple'}} onClick={this.setColor}></div></li>
//             <li><div style={{backgroundColor: 'grey'}} onClick={this.setColor}></div></li>
//           </ul>
//         </li>
//         <br/>
//         <li style={{float: 'left',}}>
//           <ul typeof='None'>
//             <li><div style={{backgroundColor: 'green'}} onClick={this.setColor}></div></li>
//             <li><div style={{backgroundColor: 'orange'}} onClick={this.setColor}></div></li>
//             <li><div style={{backgroundColor: 'brown'}} onClick={this.setColor}></div></li>
//           </ul>
//         </li>
//         <br/>
//         <li style={{float: 'left',}}>
//           <ul typeof='None'>
//             <li><div style={{backgroundColor: 'pink'}} onClick={this.setColor}></div></li>
//             <li><div style={{backgroundColor: 'lightgreen'}} onClick={this.setColor}></div></li>
//             <li><div style={{backgroundColor: 'magenta'}} onClick={this.setColor}></div></li>
//           </ul>
//         </li>
//         <br/>
//       </ul>
//     </div>
//   );
// }